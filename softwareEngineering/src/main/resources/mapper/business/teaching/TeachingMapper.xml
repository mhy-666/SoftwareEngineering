<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Service.module.business.teaching.dao.TeachingDao">

    <resultMap id="TeachingVO" type="Service.module.business.teaching.domain.vo.TeachingVO"></resultMap>
    <resultMap id="TeachingExcelVO" type="Service.module.business.teaching.domain.vo.TeachingExcelVO"></resultMap>


    <select id="queryByPage" resultMap="TeachingVO">
        select
          teacher_id,
          course_id,
          class_id,
          class_term,
          attendance_weights,
          experiment_weights
        from r_teaching
        <where>
            <if test="queryDTO.teacherId != null">
                AND teacher_id = #{queryDTO.teacherId}
            </if>
            <if test="queryDTO.courseId != null">
                AND course_id = #{queryDTO.courseId}
            </if>
            <if test="queryDTO.classId != null">
                AND class_id = #{queryDTO.classId}
            </if>
            <if test="queryDTO.classTerm != null and queryDTO.classTerm != ''">
                AND INSTR(class_term,#{queryDTO.classTerm})
            </if>
            <if test="queryDTO.attendanceWeights != null">
                AND attendance_weights = #{queryDTO.attendanceWeights}
            </if>
            <if test="queryDTO.experimentWeights != null">
                AND experiment_weights = #{queryDTO.experimentWeights}
            </if>

            <if test="queryDTO.createTimeBegin != null ">
                AND create_time &gt;= #{queryDTO.createTimeBegin}
            </if>
            <if test="queryDTO.createTimeEnd != null ">
                AND create_time &lt;= #{queryDTO.createTimeEnd}
            </if>

            <if test="queryDTO.updateTimeBegin != null ">
                AND update_time &gt;= #{queryDTO.updateTimeBegin}
            </if>
            <if test="queryDTO.updateTimeEnd != null ">
                AND update_time &lt;= #{queryDTO.updateTimeEnd}
            </if>
        </where>
    </select>

    <select id="queryAllExportData" resultMap="TeachingExcelVO">
        select
           teacher_id,
           course_id,
           class_id,
           class_term,
           attendance_weights,
           experiment_weights
        from r_teaching
        <where>
            <if test="queryDTO.teacherId != null">
                AND teacher_id = #{queryDTO.teacherId}
            </if>
            <if test="queryDTO.courseId != null">
                AND course_id = #{queryDTO.courseId}
            </if>
            <if test="queryDTO.classId != null">
                AND class_id = #{queryDTO.classId}
            </if>
            <if test="queryDTO.classTerm != null and queryDTO.classTerm != ''">
                AND INSTR(class_term,#{queryDTO.classTerm})
            </if>
            <if test="queryDTO.attendanceWeights != null">
                AND attendance_weights = #{queryDTO.attendanceWeights}
            </if>
            <if test="queryDTO.experimentWeights != null">
                AND experiment_weights = #{queryDTO.experimentWeights}
            </if>

            <if test="queryDTO.createTimeBegin != null ">
                AND create_time &gt;= #{queryDTO.createTimeBegin}
            </if>
            <if test="queryDTO.createTimeEnd != null ">
                AND create_time &lt;= #{queryDTO.createTimeEnd}
            </if>

            <if test="queryDTO.updateTimeBegin != null ">
                AND update_time &gt;= #{queryDTO.updateTimeBegin}
            </if>
            <if test="queryDTO.updateTimeEnd != null ">
                AND update_time &lt;= #{queryDTO.updateTimeEnd}
            </if>
        </where>
    </select>

    <select id="queryBatchExportData" resultMap="TeachingExcelVO">
        select
         teacher_id,
         course_id,
         class_id,
         class_term,
         attendance_weights,
         experiment_weights
        from r_teaching
        where id in
        <foreach collection="idList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>

    <delete id="deleteById">
        delete from r_teaching where id = #{id}
    </delete>

    <delete id="deleteByIdList">
        delete from r_teaching where id in
        <foreach collection="idList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </delete>

</mapper>