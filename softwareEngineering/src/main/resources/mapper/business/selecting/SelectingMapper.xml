<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Service.module.business.selecting.dao.SelectingDao">

    <resultMap id="SelectingVO" type="Service.module.business.selecting.domain.vo.SelectingVO"></resultMap>
    <resultMap id="SelectingExcelVO" type="Service.module.business.selecting.domain.vo.SelectingExcelVO"></resultMap>


    <select id="queryByPage" resultMap="SelectingVO">
        select
          student_id,
          course_id,
          class_id,
          class_term,
          attend_score,
          experiment_report_score,
          sum_score
        from r_selecting
        <where>
            <if test="queryDTO.studentId != null">
                AND student_id = #{queryDTO.studentId}
            </if>
            <if test="queryDTO.courseId != null">
                AND course_id = #{queryDTO.courseId}
            </if>
            <if test="queryDTO.classId != null">
                AND class_id = #{queryDTO.classId}
            </if>
            <if test="queryDTO.classTerm != null and queryDTO.classTerm != ''">
                AND INSTR(class_term,#{queryDTO.classTerm})
            </if>
            <if test="queryDTO.attendScore != null">
                AND attend_score = #{queryDTO.attendScore}
            </if>
            <if test="queryDTO.experimentReportScore != null">
                AND experiment_report_score = #{queryDTO.experimentReportScore}
            </if>
            <if test="queryDTO.sumScore != null">
                AND sum_score = #{queryDTO.sumScore}
            </if>

            <if test="queryDTO.createTimeBegin != null ">
                AND create_time &gt;= #{queryDTO.createTimeBegin}
            </if>
            <if test="queryDTO.createTimeEnd != null ">
                AND create_time &lt;= #{queryDTO.createTimeEnd}
            </if>

            <if test="queryDTO.updateTimeBegin != null ">
                AND update_time &gt;= #{queryDTO.updateTimeBegin}
            </if>
            <if test="queryDTO.updateTimeEnd != null ">
                AND update_time &lt;= #{queryDTO.updateTimeEnd}
            </if>
        </where>
    </select>

    <select id="queryAllExportData" resultMap="SelectingExcelVO">
        select
           student_id,
           course_id,
           class_id,
           class_term,
           attend_score,
           experiment_report_score,
           sum_score
        from r_selecting
        <where>
            <if test="queryDTO.studentId != null">
                AND student_id = #{queryDTO.studentId}
            </if>
            <if test="queryDTO.courseId != null">
                AND course_id = #{queryDTO.courseId}
            </if>
            <if test="queryDTO.classId != null">
                AND class_id = #{queryDTO.classId}
            </if>
            <if test="queryDTO.classTerm != null and queryDTO.classTerm != ''">
                AND INSTR(class_term,#{queryDTO.classTerm})
            </if>
            <if test="queryDTO.attendScore != null">
                AND attend_score = #{queryDTO.attendScore}
            </if>
            <if test="queryDTO.experimentReportScore != null">
                AND experiment_report_score = #{queryDTO.experimentReportScore}
            </if>
            <if test="queryDTO.sumScore != null">
                AND sum_score = #{queryDTO.sumScore}
            </if>

            <if test="queryDTO.createTimeBegin != null ">
                AND create_time &gt;= #{queryDTO.createTimeBegin}
            </if>
            <if test="queryDTO.createTimeEnd != null ">
                AND create_time &lt;= #{queryDTO.createTimeEnd}
            </if>

            <if test="queryDTO.updateTimeBegin != null ">
                AND update_time &gt;= #{queryDTO.updateTimeBegin}
            </if>
            <if test="queryDTO.updateTimeEnd != null ">
                AND update_time &lt;= #{queryDTO.updateTimeEnd}
            </if>
        </where>
    </select>

    <select id="queryBatchExportData" resultMap="SelectingExcelVO">
        select
         student_id,
         course_id,
         class_id,
         class_term,
         attend_score,
         experiment_report_score,
         sum_score
        from r_selecting
        where id in
        <foreach collection="idList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>

    <delete id="deleteById">
        delete from r_selecting where id = #{id}
    </delete>

    <delete id="deleteByIdList">
        delete from r_selecting where id in
        <foreach collection="idList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </delete>

</mapper>